{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\newThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\newThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\newThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\newThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\newThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\newThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\newThucTap\\\\client\\\\src\\\\app\\\\views\\\\Nhanvien\\\\CategoryDialogNV.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, DialogActions, FormControl, Paper, DialogTitle, DialogContent, IconButton, Icon } from \"@material-ui/core\"; // import Paper from '@material-ui/core/Paper'\n\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Draggable from \"react-draggable\";\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\nimport { saveItem, addItem, updateItem, checkCode } from \"./CategoryServiceNV\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar CategoryDialog = /*#__PURE__*/function (_Component) {\n  _inherits(CategoryDialog, _Component);\n\n  var _super = _createSuper(CategoryDialog);\n\n  function CategoryDialog() {\n    var _this;\n\n    _classCallCheck(this, CategoryDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      id: \"\",\n      code: \"\",\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      age: \"\",\n      description: \"\",\n      type: \"\",\n      shouldOpenNotificationPopup: false,\n      Notification: \"\"\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenNotificationPopup: false\n      });\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.id;\n      var code = _this.state.code;\n      var t = _this.props.t;\n      checkCode(id, code).then(function (result) {\n        //Nếu trả về true là code đã được sử dụng\n        if (result.data) {\n          toast.warning(t(\"general.dupli_code\")); // alert(\"Code đã được sử dụng\");\n        } else {\n          //Nếu trả về false là code chưa sử dụng có thể dùng\n          if (id) {\n            updateItem(_objectSpread({}, _this.state)).then(function () {\n              toast.success(t(\"general.updateSuccess\"));\n\n              _this.props.handleOKEditClose();\n            });\n          } else {\n            saveItem(_objectSpread({}, _this.state)).then(function () {\n              toast.success(t(\"general.addSuccess\"));\n\n              _this.props.handleOKEditClose();\n            });\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoryDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState(_objectSpread({}, item));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          id = _this$state.id,\n          name = _this$state.name,\n          code = _this$state.code,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          age = _this$state.age,\n          description = _this$state.description,\n          shouldOpenNotificationPopup = _this$state.shouldOpenNotificationPopup;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move',\n          border: '1px solid rgb(216, 213, 213)'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20\",\n        style: {\n          fontSize: '120%',\n          fontFamily: 'Arial,Helvetica,sans-serif',\n          fontWeight: 'bold',\n          color: '#409b3e'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, id ? t(\"general.update\") : t(\"general.addNew\")), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 112\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.code\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.name\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.email\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"email\",\n        value: email,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.phone\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"phone\",\n        value: phone,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.age\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"age\",\n        value: age,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle mt-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mr-12\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }\n      }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        style: {\n          marginRight: \"15px\"\n        },\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }\n      }, t(\"general.save\"))))));\n    }\n  }]);\n\n  return CategoryDialog;\n}(Component);\n\nexport default CategoryDialog;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/newThucTap/client/src/app/views/Nhanvien/CategoryDialogNV.jsx"],"names":["React","Component","Dialog","Button","Grid","DialogActions","FormControl","Paper","DialogTitle","DialogContent","IconButton","Icon","ValidatorForm","TextValidator","Draggable","NotificationPopup","saveItem","addItem","updateItem","checkCode","toast","configure","autoClose","draggable","limit","PaperComponent","props","CategoryDialog","state","id","code","name","email","phone","age","description","type","shouldOpenNotificationPopup","Notification","handleDialogClose","setState","handleChange","event","source","persist","isActive","target","checked","value","handleFormSubmit","t","then","result","data","warning","success","handleOKEditClose","open","handleClose","item","i18n","cursor","border","fontSize","fontFamily","fontWeight","color","position","right","top","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport\r\n  {\r\n    Dialog,\r\n    Button,\r\n    Grid,\r\n    DialogActions,\r\n    FormControl,\r\n    Paper,\r\n    DialogTitle,\r\n    DialogContent,\r\n    IconButton,\r\n    Icon\r\n  } from \"@material-ui/core\";\r\n// import Paper from '@material-ui/core/Paper'\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport Draggable from \"react-draggable\";\r\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\r\nimport\r\n  {\r\n    saveItem,\r\n    addItem,\r\n    updateItem,\r\n    checkCode,\r\n  } from \"./CategoryServiceNV\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure( {\r\n  autoClose: 2000,\r\n  draggable: false,\r\n  limit: 3,\r\n} );\r\n\r\nfunction PaperComponent ( props )\r\n{\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={ '[class*=\"MuiDialogContent-root\"]' }\r\n    >\r\n      <Paper { ...props } />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nclass CategoryDialog extends Component\r\n{\r\n  state = {\r\n    id: \"\",\r\n    code: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    age: \"\",\r\n    description: \"\",\r\n    type: \"\",\r\n    shouldOpenNotificationPopup: false,\r\n    Notification: \"\",\r\n  };\r\n\r\n  handleDialogClose = () =>\r\n  {\r\n    this.setState( { shouldOpenNotificationPopup: false } );\r\n  };\r\n\r\n  handleChange = ( event, source ) =>\r\n  {\r\n    event.persist();\r\n    if ( source === \"switch\" )\r\n    {\r\n      this.setState( { isActive: event.target.checked } );\r\n      return;\r\n    }\r\n    this.setState( {\r\n      [event.target.name]: event.target.value,\r\n    } );\r\n  };\r\n\r\n  handleFormSubmit = () =>\r\n  {\r\n    let { id } = this.state;\r\n    let { code } = this.state;\r\n    var { t } = this.props;\r\n    checkCode( id, code ).then( ( result ) =>\r\n    {\r\n      //Nếu trả về true là code đã được sử dụng\r\n      if ( result.data )\r\n      {\r\n        toast.warning( t( \"general.dupli_code\" ) );\r\n        // alert(\"Code đã được sử dụng\");\r\n      } else\r\n      {\r\n        //Nếu trả về false là code chưa sử dụng có thể dùng\r\n        if ( id )\r\n        {\r\n          updateItem( {\r\n            ...this.state,\r\n          } ).then( () =>\r\n          {\r\n            toast.success( t( \"general.updateSuccess\" ) );\r\n            this.props.handleOKEditClose();\r\n          } );\r\n        } else\r\n        {\r\n          saveItem( {\r\n            ...this.state,\r\n          } ).then( () =>\r\n          {\r\n            toast.success( t( \"general.addSuccess\" ) );\r\n            this.props.handleOKEditClose();\r\n          } );\r\n        }\r\n      }\r\n    } );\r\n  };\r\n\r\n  componentWillMount ()\r\n  {\r\n    //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\r\n    let { open, handleClose, item } = this.props;\r\n    this.setState( { ...item } );\r\n  }\r\n\r\n  render ()\r\n  {\r\n    let {\r\n      id,\r\n      name,\r\n      code,\r\n      email,\r\n      phone,\r\n      age,\r\n      description,\r\n      shouldOpenNotificationPopup,\r\n    } = this.state;\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    return (\r\n      <Dialog\r\n        open={ open }\r\n        PaperComponent={ PaperComponent }\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        \r\n        <DialogTitle style={{ cursor: 'move',border : '1px solid rgb(216, 213, 213)' }} id=\"draggable-dialog-title\">\r\n        <span className=\"mb-20\" style={{fontSize:'120%',fontFamily:'Arial,Helvetica,sans-serif',fontWeight:'bold',color:'#409b3e'}} > \r\n            {id ? t( \"general.update\" ) : t( \"general.addNew\" )} \r\n        </span>\r\n        <IconButton style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }} onClick={() => handleClose()}><Icon color=\"error\"\r\n              title={t(\"close\")}>\r\n              close\r\n        </Icon>\r\n        </IconButton>\r\n        </DialogTitle>\r\n\r\n        <ValidatorForm ref=\"form\" onSubmit={ this.handleFormSubmit }>\r\n          <DialogContent>\r\n            <Grid className=\"\" container spacing={ 2 }>\r\n              \r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={ { color: \"red\" } }>*</span>\r\n                      { t( \"general.code\" ) }\r\n                    </span>\r\n                  }\r\n                  onChange={ this.handleChange }\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={ code }\r\n                  validators={ [\"required\"] }\r\n                  errorMessages={ [t( \"general.required\" )] }\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={ { color: \"red\" } }>*</span>\r\n                      { t( \"general.name\" ) }\r\n                    </span>\r\n                  }\r\n                  onChange={ this.handleChange }\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={ name }\r\n                  validators={ [\"required\"] }\r\n                  errorMessages={ [t( \"general.required\" )] }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={ { color: \"red\" } }>*</span>\r\n                      { t( \"general.email\" ) }\r\n                    </span>\r\n                  }\r\n                  onChange={ this.handleChange }\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  value={ email }\r\n                  validators={ [\"required\"] }\r\n                  errorMessages={ [t( \"general.required\" )] }\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={ { color: \"red\" } }>*</span>\r\n                      { t( \"general.phone\" ) }\r\n                    </span>\r\n                  }\r\n                  onChange={ this.handleChange }\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  value={ phone }\r\n                  validators={ [\"required\"] }\r\n                  errorMessages={ [t( \"general.required\" )] }\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={ { color: \"red\" } }>*</span>\r\n                      { t( \"general.age\" ) }\r\n                    </span>\r\n                  }\r\n                  onChange={ this.handleChange }\r\n                  type=\"text\"\r\n                  name=\"age\"\r\n                  value={ age }\r\n                  validators={ [\"required\"] }\r\n                  errorMessages={ [t( \"general.required\" )] }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <div className=\"flex flex-space-between flex-middle mt-12\">\r\n              <Button\r\n                variant=\"contained\"\r\n                className=\"mr-12\"\r\n                color=\"secondary\"\r\n                onClick={ () => this.props.handleClose() }\r\n              >\r\n                { t( \"general.cancel\" ) }\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                style={ { marginRight: \"15px\" } }\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                { t( \"general.save\" ) }\r\n              </Button>\r\n            </div>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryDialog;\r\n"]},"metadata":{},"sourceType":"module"}